{"version":3,"sources":["webpack:///./src/_pages/index/index.style.tsx","webpack:///./src/_pages/index/indexPage.tsx","webpack:///./src/pages/index.tsx"],"names":["Grid","styled","div","media","desktopSmall","StyledHeader","header","tablet","MainContent","main","MenuWrapper","section","phone","desktopMedium","desktopLarge","Menu","nav","List","ul","MenuItem","a","Font","SECONDARY","isFirst","css","isLast","IndexPage","content","data","dataJson","isFooter","className","as","gutter","mainTitle","menuItems","map","i","array","label","link","href","length","mailAddress","font","fillOnHover","mailLinkLabel","copyrightText","query"],"mappings":"8oEAIO,IAAMA,EAAOC,IAAOC,IAAV,mEAAGD,CAAH,2CAGbE,IAAMC,aAHO,MAUJC,EAAeJ,IAAOK,OAAV,2EAAGL,CAAH,2BAErBE,IAAMI,OAFe,MAOZC,EAAcP,IAAOQ,KAAV,0EAAGR,CAAH,4DAMXS,EAAcT,IAAOU,QAAV,0EAAGV,CAAH,kEAKpBE,IAAMS,MALc,KAQpBT,IAAMI,OARc,KAWpBJ,IAAMU,cAXc,KAcpBV,IAAMW,aAdc,MAmBXC,EAAOd,IAAOe,IAAV,mEAAGf,CAAH,+DAIbE,IAAMS,MAJO,KAabT,IAAMI,OAbO,KAgBbJ,IAAMC,aAhBO,MAqBJa,EAAOhB,IAAOiB,GAAV,mEAAGjB,CAAH,QACbE,IAAMS,MADO,MAOJO,EAAWlB,IAAOmB,EAAV,uEAAGnB,CAAH,wJACJoB,IAAKC,WAShB,qBAAGC,SAEHC,YADO,0CAKP,qBAAGC,QAEHD,YADM,mCAORrB,IAAMS,MAxBW,KA+BjBT,IAAMI,OA/BW,KAmCjBJ,IAAMC,aAnCW,KAuCjBD,IAAMU,cAvCW,KA0CjBV,IAAMW,aA1CW,MC1BNY,EAvCuB,SAAC,GAAa,IAC1CC,EAD0C,EAAXC,KACdC,SAAjBF,QACR,OACE,cAAC,IAAD,CAAaG,UAAU,EAAvB,SACE,eAAC9B,EAAD,CAAM+B,UAAU,UAAhB,UACE,cAAC1B,EAAD,UACE,cAAC,IAAD,CAAS2B,GAAG,KAAKC,OAAO,SAAxB,SACGN,EAAQO,cAGb,cAAC1B,EAAD,UACE,cAACE,EAAD,UACE,cAACK,EAAD,UACE,cAACE,EAAD,UACGU,EAAQQ,UAAUC,KAAI,WAAkBC,EAAGC,GAArB,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACrB,6BACE,cAACrB,EAAD,CAAUsB,KAAMD,EAAMjB,QAAe,IAANc,EAASZ,OAAQY,IAAMC,EAAMI,OAAS,EAArE,SACGH,KAFL,GAAYC,cAUtB,iCACE,8BACE,cAAC,IAAD,CAAWR,GAAG,IAAIS,KAAI,UAAYd,EAAQgB,YAAeC,KAAMvB,IAAKC,UAAWuB,aAAW,EAA1F,SACGlB,EAAQmB,gBAEX,uBACA,cAAC,IAAD,CAAWF,KAAMvB,IAAKC,UAAtB,SAAkCK,EAAQoB,2BCpCzCC,EAAQ","file":"component---src-pages-index-tsx-713a3f60cb06b2545d1f.js","sourcesContent":["import styled, { css } from 'styled-components';\n\nimport { media, Font } from '../../utils';\n\nexport const Grid = styled.div`\n  display: flex;\n  flex-direction: column;\n  ${media.desktopSmall`\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-template-rows: 1fr;\n  `}\n`;\n\nexport const StyledHeader = styled.header`\n  padding-top: 1.5rem;\n  ${media.tablet`\n    padding-top: 4rem;\n  `}\n`;\n\nexport const MainContent = styled.main`\n  grid-row-end: span 2;\n  position: relative;\n  margin-top: auto;\n`;\n\nexport const MenuWrapper = styled.section`\n  display: flex;\n  align-items: flex-end;\n  height: 100%;\n\n  ${media.phone`\n    min-height: 350px;\n  `}\n  ${media.tablet`\n    min-height: 520px;\n  `}\n  ${media.desktopMedium`\n    min-height: 540px;\n  `}\n  ${media.desktopLarge`\n    min-height: 800px;\n  `}\n`;\n\nexport const Menu = styled.nav`\n  display: table;\n  position: relative;\n  padding: 4rem 0;\n  ${media.phone`\n    position: absolute;\n    left: 0; \n    bottom: 0;\n    transform-origin: 0% 100%;\n    transform: rotate(90deg) translateX(-100%);\n    text-align: right;\n    padding: 0 2rem;\n  `}\n  ${media.tablet`\n    padding: 0 4rem;\n  `}\n  ${media.desktopSmall`\n    padding: 0;\n  `}\n`;\n\nexport const List = styled.ul`\n  ${media.phone`\n    display: flex;\n    flex-direction: column-reverse;\n  `}\n`;\n\nexport const MenuItem = styled.a<{ isFirst: boolean; isLast: boolean }>`\n  font-family: ${Font.SECONDARY};\n  display: block;\n  font-size: 4rem;\n  letter-spacing: 1px;\n  text-decoration: none;\n  margin: .5rem 0;\n  padding: .5rem 0;\n\n  && {\n    ${({ isFirst }) =>\n      isFirst &&\n      css`\n        margin-bottom: 0;\n        padding-bottom: 0;\n      `}\n    ${({ isLast }) =>\n      isLast &&\n      css`\n        margin-top: 0;\n        padding-top: 0;\n      `}\n  }\n\n  ${media.phone`\n    font-size: 6rem;\n    margin: 1.25rem 0;\n    /* these transforms keep rotated element in line with \n    other layout elements (verical-align worked unsatisfying)  */\n    transform: translateY(1rem);\n  `};\n  ${media.tablet`\n    font-size: 8rem;\n    transform: translateY(1.5rem);\n  `};\n  ${media.desktopSmall`\n    letter-spacing: 4px;\n    transform: none;\n  `}\n  ${media.desktopMedium`\n    margin: 2rem 0;\n  `}\n  ${media.desktopLarge`\n    font-size: 10rem;\n  `} \n`;\n","import { FC } from 'react';\n\nimport { Heading, BasicText } from '../../components/typography';\nimport { BasicLayout } from '../../components/layouts';\nimport { Font } from '../../utils';\n\nimport { Grid, StyledHeader, MainContent, MenuWrapper, Menu, List, MenuItem } from './index.style';\nimport { IndexPageProps } from './index.model';\n\nconst IndexPage: FC<IndexPageProps> = ({ data }) => {\n  const { content } = data.dataJson;\n  return (\n    <BasicLayout isFooter={false}>\n      <Grid className=\"stretch\">\n        <StyledHeader>\n          <Heading as=\"h1\" gutter=\"bottom\">\n            {content.mainTitle}\n          </Heading>\n        </StyledHeader>\n        <MainContent>\n          <MenuWrapper>\n            <Menu>\n              <List>\n                {content.menuItems.map(({ label, link }, i, array) => (\n                  <li key={`${link}`}>\n                    <MenuItem href={link} isFirst={i === 0} isLast={i === array.length - 1}>\n                      {label}\n                    </MenuItem>\n                  </li>\n                ))}\n              </List>\n            </Menu>\n          </MenuWrapper>\n        </MainContent>\n        <footer>\n          <p>\n            <BasicText as=\"a\" href={`mailto:${content.mailAddress}`} font={Font.SECONDARY} fillOnHover>\n              {content.mailLinkLabel}\n            </BasicText>\n            <br />\n            <BasicText font={Font.SECONDARY}>{content.copyrightText}</BasicText>\n          </p>\n        </footer>\n      </Grid>\n    </BasicLayout>\n  );\n};\n\nexport default IndexPage;\n","import { graphql } from 'gatsby';\n\nexport { default } from '../_pages/index';\n\nexport const query = graphql`\n  {\n    dataJson(dataType: { eq: \"pagedata\" }, pageName: { eq: \"index\" }) {\n      content {\n        mainTitle\n        mailAddress\n        mailLinkLabel\n        menuItems {\n          label\n          link\n        }\n        copyrightText\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}