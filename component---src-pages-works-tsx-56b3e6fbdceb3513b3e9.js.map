{"version":3,"sources":["webpack:///./src/_pages/works/works.style.tsx","webpack:///./src/_pages/works/works.tsx","webpack:///./src/pages/works.tsx","webpack:///./src/containers/pages/basic-page/BasicPage.tsx","webpack:///./src/containers/pages/error-page/ErrorPage.style.tsx","webpack:///./src/containers/pages/error-page/ErrorPage.tsx"],"names":["Grid","styled","ul","media","phone","desktopSmall","Card","li","TextWrapper","article","WorksPage","data","content","dataJson","basicPageContent","pageTitle","Section","cards","length","map","title","description","imageName","links","technologies","releaseDate","className","fluid","allFile","edges","find","item","node","childImageSharp","originalName","alt","gutter","as","fontSize","technologyText","releaseDateText","style","marginTop","i","array","label","url","href","target","rel","font","Font","SECONDARY","moveUnderlineOnHover","cardsAltText","query","BasicPage","children","isReturnButton","centered","HeadingWrapper","div","ErrorPage","errorCode","errorMessage"],"mappings":"seAIO,IAAMA,EAAOC,IAAOC,GAAV,mEAAGD,CAAH,oFAMbE,IAAMC,MANO,KASbD,IAAME,aATO,MAcJC,EAAOL,IAAOM,GAAV,mEAAGN,CAAH,+CAKJO,EAAcP,IAAOQ,QAAV,0EAAGR,CAAH,oFC0DTS,EAtEuB,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAC/BC,EAAYD,EAAKE,SAAjBD,QAEFE,EAAyC,CAC7CC,UAAWH,EAAQG,WAGrB,OACE,cAAC,IAAD,CAAWH,QAASE,EAApB,SACE,cAAC,IAAUE,QAAX,UACGJ,EAAQK,MAAMC,OACb,cAAClB,EAAD,UACGY,EAAQK,MAAME,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,aAAcC,EAAvD,EAAuDA,YAAvD,OACjB,eAACnB,EAAD,CAAMoB,UAAU,4BAAhB,UACGJ,GACC,iCACE,cAAC,IAAD,CACEI,UAAU,uCACVC,MAGEhB,EAAKiB,QAAQC,MAAMC,MAAK,SAACC,GACvB,OAAOA,EAAKC,KAAKC,gBAAgBN,MAAMO,eAAiBZ,KACvDU,KAAKC,gBAAgBN,MAE1BQ,KAAQf,GAAS,IAAd,0BAIT,eAACZ,EAAD,WACGY,GAAS,cAAC,IAAD,CAASgB,OAAO,SAAhB,SAA0BhB,IACnCC,GACC,eAAC,IAAD,CAAWgB,GAAG,IAAIC,SAAS,UAA3B,UACE,cAAC,IAAD,UAAYjB,IACZ,eAAC,IAAD,WACMT,EAAQ2B,eADd,IACgCf,EAC9B,uBACIZ,EAAQ4B,gBAHd,IAGiCf,QAIrC,qBAAKgB,MAAO,CAAEC,UAAW,QAAzB,UACInB,GAAS,IAAIJ,KAAI,WAAiBwB,EAAGC,GAApB,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,OACjB,cAAC,IAAD,CACET,GAAG,IACHX,UAAU,YACVqB,KAAMD,GAAO,KAEbE,OAAO,SACPC,IAAI,sBACJb,OAAQO,EAAIC,EAAM1B,OAAS,EAAI,QAAU,KACzCgC,KAAMC,IAAKC,UACXC,sBAAoB,EATtB,SAWGR,GAPIA,aAlCkCzB,QAkDrD,cAAC,IAAD,CAASM,UAAU,SAAnB,SAA6Bd,EAAQ0C,oBCtElCC,EAAQ,c,8ICGfC,EAAsD,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,SAAU7C,EAAc,EAAdA,QACvE,OACE,eAAC,IAAD,CAAaQ,MAAOR,EAAQG,UAAW2C,gBAAc,EAArD,UACE,iCACE,cAAC,IAAD,CAASrB,GAAG,KAAKC,SAAS,QAAQF,OAAO,SAASuB,UAAQ,EAA1D,SACG/C,EAAQG,cAGb,sBAAMW,UAAU,gBAAhB,SAAiC+B,QASvCD,EAAUxC,QAJmB,SAAC,GAAiB,IAAfyC,EAAe,EAAfA,SAC9B,OAAO,yBAAS/B,UAAU,eAAnB,SAAmC+B,K,gBCnB/BG,E,UAAiB3D,EAAO4D,IAAV,oFAAG5D,CAAH,sBCQd6D,EAA+B,SAAC,GAAa,IAChDlD,EADgD,EAAXD,KACpBE,SAAjBD,QAER,OACE,cAAC,IAAD,CAAaQ,MAAOR,EAAQG,UAAW2C,gBAAc,EAArD,SACE,cAAC,IAAD,UACE,+BACE,oCACE,cAAC,IAAD,CAAqBrB,GAAG,KAAxB,SAA8BzB,EAAQmD,YACtC,cAACH,EAAD,UACE,cAAC,IAAD,CAASvB,GAAG,IAAZ,SAAiBzB,EAAQoD","file":"component---src-pages-works-tsx-56b3e6fbdceb3513b3e9.js","sourcesContent":["import styled from 'styled-components';\n\nimport { media } from '../../utils';\n\nexport const Grid = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 2rem;\n  margin-bottom: auto;\n\n  ${media.phone`\n    padding: 0 4rem;\n  `}\n  ${media.desktopSmall`\n    grid-template-columns: repeat(2, 1fr);\n  `}\n`;\n\nexport const Card = styled.li`\n  display: grid;\n  grid-template-rows: auto 1fr;\n`;\n\nexport const TextWrapper = styled.article`\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n","import { FC } from 'react';\nimport Img from 'gatsby-image';\n\nimport { BasicPage } from '../../containers/pages';\nimport { BasicText, Heading } from '../../components/typography';\nimport { BasicPageTextContent } from '../../models/graphql';\nimport { Font } from '../../utils';\n\nimport { WorkImage, WorksPageProps } from './works.model';\nimport { Grid, Card, TextWrapper } from './works.style';\n\nconst WorksPage: FC<WorksPageProps> = ({ data }) => {\n  const { content } = data.dataJson;\n\n  const basicPageContent: BasicPageTextContent = {\n    pageTitle: content.pageTitle,\n  };\n\n  return (\n    <BasicPage content={basicPageContent}>\n      <BasicPage.Section>\n        {content.cards.length ? (\n          <Grid>\n            {content.cards.map(({ title, description, imageName, links, technologies, releaseDate }) => (\n              <Card className=\"saturate-on-hover-trigger\" key={title}>\n                {imageName && (\n                  <figure>\n                    <Img\n                      className=\"img-stretched saturate-on-hover-item\"\n                      fluid={\n                        // this chain filters image data from graphql by checking\n                        // its name and returns its `fluid` object\n                        data.allFile.edges.find((item: WorkImage) => {\n                          return item.node.childImageSharp.fluid.originalName === imageName;\n                        }).node.childImageSharp.fluid\n                      }\n                      alt={`${title || ''} example screenshot`}\n                    />\n                  </figure>\n                )}\n                <TextWrapper>\n                  {title && <Heading gutter=\"bottom\">{title}</Heading>}\n                  {description && (\n                    <BasicText as=\"p\" fontSize=\"smaller\">\n                      <BasicText>{description}</BasicText>\n                      <BasicText>\n                        {`${content.technologyText} ${technologies}`}\n                        <br />\n                        {`${content.releaseDateText} ${releaseDate}`}\n                      </BasicText>\n                    </BasicText>\n                  )}\n                  <div style={{ marginTop: 'auto' }}>\n                    {(links || []).map(({ label, url }, i, array) => (\n                      <BasicText\n                        as=\"a\"\n                        className=\"underline\"\n                        href={url || null}\n                        key={label}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        gutter={i < array.length - 1 ? 'right' : null}\n                        font={Font.SECONDARY}\n                        moveUnderlineOnHover\n                      >\n                        {label}\n                      </BasicText>\n                    ))}\n                  </div>\n                </TextWrapper>\n              </Card>\n            ))}\n          </Grid>\n        ) : (\n          <Heading className=\"m-auto\">{content.cardsAltText}</Heading>\n        )}\n      </BasicPage.Section>\n    </BasicPage>\n  );\n};\n\nexport default WorksPage;\n","import { graphql } from 'gatsby';\n\nexport { default } from '../_pages/works';\n\nexport const query = graphql`\n  {\n    allFile(filter: { relativeDirectory: { eq: \"works\" } }) {\n      edges {\n        node {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid_tracedSVG\n              originalName\n            }\n          }\n        }\n      }\n    }\n    dataJson(dataType: { eq: \"pagedata\" }, pageName: { eq: \"works\" }) {\n      content {\n        pageTitle\n        releaseDateText\n        technologyText\n        cards {\n          title\n          description\n          technologies\n          releaseDate\n          imageName\n          links {\n            label\n            url\n          }\n        }\n        cardsAltText\n      }\n    }\n  }\n`;\n","import { ComponentType, FC, ReactNode } from 'react';\n\nimport { Heading } from '../../../components/typography';\nimport { BasicLayout } from '../../../components/layouts';\n\nimport { BasicPageCmpProps, NestedComponents } from './BasicPage.model';\n\nconst BasicPage: FC<BasicPageCmpProps> & NestedComponents = ({ children, content }) => {\n  return (\n    <BasicLayout title={content.pageTitle} isReturnButton>\n      <header>\n        <Heading as=\"h1\" fontSize=\"large\" gutter=\"bottom\" centered>\n          {content.pageTitle}\n        </Heading>\n      </header>\n      <main className=\"stretch h-100\">{children}</main>\n    </BasicLayout>\n  );\n};\n\nconst BasicPageSection: FC = ({ children }) => {\n  return <section className=\"m-auto w-100\">{children}</section>;\n};\n\nBasicPage.Section = BasicPageSection;\n\nexport { BasicPage };\n","import styled from 'styled-components';\n\nexport const HeadingWrapper = styled.div`\n  max-width: 400px;\n`;\n","import { FC } from 'react';\n\nimport { BasicLayout } from '../../../components/layouts';\nimport { FeaturedErrorNumber } from '../../../components/typography';\nimport { ErrorPageWrapper } from '../../../components/wrappers';\nimport { ErrorCmpProps } from '../../../models/pages';\nimport { Heading } from '../../../components/typography';\n\nimport { HeadingWrapper } from './ErrorPage.style';\n\nexport const ErrorPage: FC<ErrorCmpProps> = ({ data }) => {\n  const { content } = data.dataJson;\n\n  return (\n    <BasicLayout title={content.pageTitle} isReturnButton>\n      <ErrorPageWrapper>\n        <main>\n          <section>\n            <FeaturedErrorNumber as=\"h1\">{content.errorCode}</FeaturedErrorNumber>\n            <HeadingWrapper>\n              <Heading as=\"p\">{content.errorMessage}</Heading>\n            </HeadingWrapper>\n          </section>\n        </main>\n      </ErrorPageWrapper>\n    </BasicLayout>\n  );\n};\n"],"sourceRoot":""}