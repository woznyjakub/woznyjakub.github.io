{"version":3,"sources":["webpack:///./src/_pages/contact/contact.style.tsx","webpack:///./src/_pages/contact/contact.tsx","webpack:///./src/pages/contact.tsx","webpack:///./src/containers/pages/basic-page/BasicPage.tsx","webpack:///./src/containers/pages/error-page/ErrorPage.style.tsx","webpack:///./src/containers/pages/error-page/ErrorPage.tsx"],"names":["StyledIcon","styled","img","media","phone","desktopSmall","ContactItemWrapper","div","ContactPage","data","content","dataJson","icons","allFile","edges","basicPageContent","pageTitle","Section","gutter","centered","contactDatalistLabel","contactData","map","label","href","iconName","icon","find","node","name","publicURL","Item","as","target","rel","fontSize","src","alt","query","BasicPage","children","title","isReturnButton","className","HeadingWrapper","ErrorPage","errorCode","errorMessage"],"mappings":"ocAIO,IAAMA,EAAaC,IAAOC,IAAV,2EAAGD,CAAH,uEAMnBE,IAAMC,MANa,KAUnBD,IAAME,aAVa,MAeVC,EAAqBL,IAAOM,IAAV,mFAAGN,CAAH,wBC2BhBO,EApC2B,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACnCC,EAAYD,EAAKE,SAAjBD,QACOE,EAAUH,EAAKI,QAAtBC,MAEFC,EAAyC,CAC7CC,UAAWN,EAAQM,WAGrB,OACE,cAAC,IAAD,CAAWN,QAASK,EAApB,SACE,eAAC,IAAUE,QAAX,WACE,cAAC,IAAD,CAASC,OAAO,SAASC,UAAQ,EAAjC,SACGT,EAAQU,uBAEX,cAAC,IAAD,UACGV,EAAQW,YAAYC,KAAI,YAA+B,IAA5BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjCC,EAAOd,EAAMe,MAAK,SAACD,GAAD,OAAUA,EAAKE,KAAKC,OAASJ,KAAUG,KAAKE,UAEpE,OACE,cAAC,IAAUC,KAAX,UACE,cAACzB,EAAD,UAEE,eAAC,IAAD,CAAW0B,GAAG,IAAIR,KAAMA,EAAMS,OAAO,SAASC,IAAI,sBAAsBC,SAAS,SAAjF,UACE,cAACnC,EAAD,CAAYoC,IAAKV,EAAMW,IAAQd,EAAL,UACzBA,QALcA,cCzBtBe,EAAQ,c,8ICGfC,EAAsD,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,SAAU9B,EAAc,EAAdA,QACvE,OACE,eAAC,IAAD,CAAa+B,MAAO/B,EAAQM,UAAW0B,gBAAc,EAArD,UACE,iCACE,cAAC,IAAD,CAASV,GAAG,KAAKG,SAAS,QAAQjB,OAAO,SAASC,UAAQ,EAA1D,SACGT,EAAQM,cAGb,sBAAM2B,UAAU,gBAAhB,SAAiCH,QASvCD,EAAUtB,QAJmB,SAAC,GAAiB,IAAfuB,EAAe,EAAfA,SAC9B,OAAO,yBAASG,UAAU,eAAnB,SAAmCH,K,gBCnB/BI,E,UAAiB3C,EAAOM,IAAV,oFAAGN,CAAH,sBCQd4C,EAA+B,SAAC,GAAa,IAChDnC,EADgD,EAAXD,KACpBE,SAAjBD,QAER,OACE,cAAC,IAAD,CAAa+B,MAAO/B,EAAQM,UAAW0B,gBAAc,EAArD,SACE,cAAC,IAAD,UACE,+BACE,oCACE,cAAC,IAAD,CAAqBV,GAAG,KAAxB,SAA8BtB,EAAQoC,YACtC,cAACF,EAAD,UACE,cAAC,IAAD,CAASZ,GAAG,IAAZ,SAAiBtB,EAAQqC","file":"component---src-pages-contact-tsx-639a6b4015912d52c4c5.js","sourcesContent":["import styled from 'styled-components';\n\nimport { media } from '../../utils';\n\nexport const StyledIcon = styled.img`\n  display: block;\n  margin: 0 auto;\n  height: 3rem;\n  margin-bottom: 1rem;\n\n  ${media.phone`\n    height: 5rem;\n  `}\n\n  ${media.desktopSmall`\n    height: 6.5rem;\n  `}\n`;\n\nexport const ContactItemWrapper = styled.div`\n  text-align: center;\n`;\n","import { FC } from 'react';\n\nimport { BasicPage } from '../../containers/pages';\nimport { BasicList } from '../../components/misc';\nimport { BasicText, Heading } from '../../components/typography';\nimport { BasicPageTextContent } from '../../models/graphql';\n\nimport { ContactPageProps } from './contact.model';\nimport { ContactItemWrapper, StyledIcon } from './contact.style';\n\nconst ContactPage: FC<ContactPageProps> = ({ data }) => {\n  const { content } = data.dataJson;\n  const { edges: icons } = data.allFile;\n\n  const basicPageContent: BasicPageTextContent = {\n    pageTitle: content.pageTitle,\n  };\n\n  return (\n    <BasicPage content={basicPageContent}>\n      <BasicPage.Section>\n        <Heading gutter=\"bottom\" centered>\n          {content.contactDatalistLabel}\n        </Heading>\n        <BasicList>\n          {content.contactData.map(({ label, href, iconName }) => {\n            const icon = icons.find((icon) => icon.node.name === iconName).node.publicURL;\n\n            return (\n              <BasicList.Item key={label}>\n                <ContactItemWrapper>\n                  {/* @todo: handle icons using <svg> tag and use `fillOnHover` effect */}\n                  <BasicText as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\" fontSize=\"larger\">\n                    <StyledIcon src={icon} alt={`${label} icon`} />\n                    {label}\n                  </BasicText>\n                </ContactItemWrapper>\n              </BasicList.Item>\n            );\n          })}\n        </BasicList>\n      </BasicPage.Section>\n    </BasicPage>\n  );\n};\n\nexport default ContactPage;\n","import { graphql } from 'gatsby';\n\nexport { default } from '../_pages/contact';\n\nexport const query = graphql`\n  {\n    allFile(filter: { extension: { eq: \"svg\" } }) {\n      edges {\n        node {\n          publicURL\n          name\n        }\n      }\n    }\n    dataJson(dataType: { eq: \"pagedata\" }, pageName: { eq: \"contact\" }) {\n      content {\n        pageTitle\n        contactDatalistLabel\n        contactData {\n          label\n          href\n          iconName\n        }\n      }\n    }\n  }\n`;\n","import { ComponentType, FC, ReactNode } from 'react';\n\nimport { Heading } from '../../../components/typography';\nimport { BasicLayout } from '../../../components/layouts';\n\nimport { BasicPageCmpProps, NestedComponents } from './BasicPage.model';\n\nconst BasicPage: FC<BasicPageCmpProps> & NestedComponents = ({ children, content }) => {\n  return (\n    <BasicLayout title={content.pageTitle} isReturnButton>\n      <header>\n        <Heading as=\"h1\" fontSize=\"large\" gutter=\"bottom\" centered>\n          {content.pageTitle}\n        </Heading>\n      </header>\n      <main className=\"stretch h-100\">{children}</main>\n    </BasicLayout>\n  );\n};\n\nconst BasicPageSection: FC = ({ children }) => {\n  return <section className=\"m-auto w-100\">{children}</section>;\n};\n\nBasicPage.Section = BasicPageSection;\n\nexport { BasicPage };\n","import styled from 'styled-components';\n\nexport const HeadingWrapper = styled.div`\n  max-width: 400px;\n`;\n","import { FC } from 'react';\n\nimport { BasicLayout } from '../../../components/layouts';\nimport { FeaturedErrorNumber } from '../../../components/typography';\nimport { ErrorPageWrapper } from '../../../containers/misc';\nimport { ErrorCmpProps } from '../../../models/pages';\nimport { Heading } from '../../../components/typography';\n\nimport { HeadingWrapper } from './ErrorPage.style';\n\nexport const ErrorPage: FC<ErrorCmpProps> = ({ data }) => {\n  const { content } = data.dataJson;\n\n  return (\n    <BasicLayout title={content.pageTitle} isReturnButton>\n      <ErrorPageWrapper>\n        <main>\n          <section>\n            <FeaturedErrorNumber as=\"h1\">{content.errorCode}</FeaturedErrorNumber>\n            <HeadingWrapper>\n              <Heading as=\"p\">{content.errorMessage}</Heading>\n            </HeadingWrapper>\n          </section>\n        </main>\n      </ErrorPageWrapper>\n    </BasicLayout>\n  );\n};\n"],"sourceRoot":""}