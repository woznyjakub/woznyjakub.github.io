{"version":3,"sources":["webpack:///./src/_pages/contact/contact.style.tsx","webpack:///./src/_pages/contact/contact.tsx","webpack:///./src/pages/contact.tsx","webpack:///./src/containers/pages/basic-page/BasicPage.tsx","webpack:///./src/containers/pages/error-page/ErrorPage.style.tsx","webpack:///./src/containers/pages/error-page/ErrorPage.tsx"],"names":["StyledIcon","styled","img","media","phone","desktopSmall","ContactItemWrapper","div","ContactPage","data","content","dataJson","icons","allFile","edges","title","pageTitle","Section","pageTitleGutter","centered","contactDatalistLabel","contactData","map","label","href","iconName","icon","find","node","name","publicURL","Item","as","target","rel","fontSize","src","alt","query","BasicPage","children","isReturnButton","className","HeadingWrapper","ErrorPage","errorCode","errorMessage"],"mappings":"ocAIO,IAAMA,EAAaC,IAAOC,IAAV,+EAAGD,CAAH,uEAMnBE,IAAMC,MANa,KAUnBD,IAAME,aAVa,MAeVC,EAAqBL,IAAOM,IAAV,uFAAGN,CAAH,wBCwBhBO,EAhCK,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,KACbC,EAAYD,EAAKE,SAAjBD,QACOE,EAAUH,EAAKI,QAAtBC,MAER,OACE,cAAC,IAAD,CAAWC,MAAOL,EAAQM,UAA1B,SACE,eAAC,IAAUC,QAAX,WACE,cAAC,IAAD,CAASC,iBAAe,EAACC,UAAQ,EAAjC,SACGT,EAAQU,uBAEX,cAAC,IAAD,UACGV,EAAQW,YAAYC,KAAI,YAA+B,IAA5BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACjCC,EAAOd,EAAMe,MAAK,SAACD,GAAD,OAAUA,EAAKE,KAAKC,OAASJ,KAAUG,KAAKE,UAEpE,OACE,cAAC,IAAUC,KAAX,UACE,cAACzB,EAAD,UAEE,eAAC,IAAD,CAAW0B,GAAG,IAAIR,KAAMA,EAAMS,OAAO,SAASC,IAAI,sBAAsBC,SAAS,SAAjF,UACE,cAACnC,EAAD,CAAYoC,IAAKV,EAAMW,IAAQd,EAAL,UACzBA,QALcA,cCtBtBe,EAAQ,c,8ICSfC,EAAsD,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,SAAUzB,EAAY,EAAZA,MACvE,OACE,eAAC,IAAD,CAAaA,MAAOA,EAAO0B,gBAAc,EAAzC,UACE,iCACE,cAAC,IAAD,CAAST,GAAG,KAAKG,SAAS,QAAQjB,iBAAe,EAACC,UAAQ,EAA1D,SACGJ,MAGL,sBAAM2B,UAAU,gBAAhB,SAAiCF,QASvCD,EAAUtB,QAJe,SAAC,GAAiB,IAAfuB,EAAe,EAAfA,SAC1B,OAAO,yBAASE,UAAU,eAAnB,SAAmCF,K,gBCzB/BG,E,UAAiB1C,EAAOM,IAAV,iFAAGN,CAAH,sBCWd2C,EAAY,SAAC,GAAsD,IAApD7B,EAAoD,EAApDA,MAAO8B,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,aAC5C,OACE,cAAC,IAAD,CAAa/B,MAAOA,EAAO0B,gBAAc,EAAzC,SACE,cAAC,IAAD,UACE,+BACE,oCACE,cAAC,IAAD,CAAqBT,GAAG,KAAxB,SAA8Ba,IAC9B,cAACF,EAAD,UACE,cAAC,IAAD,CAASX,GAAG,IAAZ,SAAiBc","file":"component---src-pages-contact-tsx-02d8fd761d30d3904574.js","sourcesContent":["import styled from 'styled-components';\n\nimport { media } from '../../utils';\n\nexport const StyledIcon = styled.img`\n  display: block;\n  margin: 0 auto;\n  height: 3rem;\n  margin-bottom: 1rem;\n\n  ${media.phone`\n    height: 5rem;\n  `}\n\n  ${media.desktopSmall`\n    height: 6.5rem;\n  `}\n`;\n\nexport const ContactItemWrapper = styled.div`\n  text-align: center;\n`;\n","import { BasicPage } from '../../containers/pages';\nimport { BasicList } from '../../components/misc';\nimport { BasicText, Heading } from '../../components/typography';\n\nimport { ContactItemWrapper, StyledIcon } from './contact.style';\nimport { ContactPageData } from './contact.interface';\n\ntype ContactPageProps = {\n  data: ContactPageData;\n};\n\nconst ContactPage = ({ data }: ContactPageProps) => {\n  const { content } = data.dataJson;\n  const { edges: icons } = data.allFile;\n\n  return (\n    <BasicPage title={content.pageTitle}>\n      <BasicPage.Section>\n        <Heading pageTitleGutter centered>\n          {content.contactDatalistLabel}\n        </Heading>\n        <BasicList>\n          {content.contactData.map(({ label, href, iconName }) => {\n            const icon = icons.find((icon) => icon.node.name === iconName).node.publicURL;\n\n            return (\n              <BasicList.Item key={label}>\n                <ContactItemWrapper>\n                  {/* @todo: handle icons using <svg> tag and use `fillOnHover` effect */}\n                  <BasicText as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\" fontSize=\"larger\">\n                    <StyledIcon src={icon} alt={`${label} icon`} />\n                    {label}\n                  </BasicText>\n                </ContactItemWrapper>\n              </BasicList.Item>\n            );\n          })}\n        </BasicList>\n      </BasicPage.Section>\n    </BasicPage>\n  );\n};\n\nexport default ContactPage;\n","import { graphql } from 'gatsby';\n\nexport { default } from '../_pages/contact';\n\nexport const query = graphql`\n  {\n    allFile(filter: { extension: { eq: \"svg\" } }) {\n      edges {\n        node {\n          publicURL\n          name\n        }\n      }\n    }\n    dataJson(dataType: { eq: \"pagedata\" }, pageName: { eq: \"contact\" }) {\n      content {\n        pageTitle\n        contactDatalistLabel\n        contactData {\n          label\n          href\n          iconName\n        }\n      }\n    }\n  }\n`;\n","import { FC } from 'react';\n\nimport { Heading } from '../../../components/typography';\nimport { BasicLayout } from '../../../components/layouts';\n\ntype BasicPageCmpProps = {\n  title: string;\n};\n\ntype NestedComponents = {\n  Section: FC;\n};\n\nconst BasicPage: FC<BasicPageCmpProps> & NestedComponents = ({ children, title }) => {\n  return (\n    <BasicLayout title={title} isReturnButton>\n      <header>\n        <Heading as=\"h1\" fontSize=\"large\" pageTitleGutter centered>\n          {title}\n        </Heading>\n      </header>\n      <main className=\"stretch h-100\">{children}</main>\n    </BasicLayout>\n  );\n};\n\nconst BasicPageSection = ({ children }) => {\n  return <section className=\"m-auto w-100\">{children}</section>;\n};\n\nBasicPage.Section = BasicPageSection;\n\nexport { BasicPage };\n","import styled from 'styled-components';\n\nexport const HeadingWrapper = styled.div`\n  max-width: 400px;\n`;\n","import { BasicLayout } from '../../../components/layouts';\nimport { FeaturedErrorNumber } from '../../../components/typography';\nimport { ErrorPageWrapper } from '../../../components/wrappers';\nimport { Heading } from '../../../components/typography';\n\nimport { HeadingWrapper } from './ErrorPage.style';\n\ntype ErrorCmpProps = {\n  title: string;\n  errorCode: string;\n  errorMessage: string;\n};\n\nexport const ErrorPage = ({ title, errorCode, errorMessage }: ErrorCmpProps) => {\n  return (\n    <BasicLayout title={title} isReturnButton>\n      <ErrorPageWrapper>\n        <main>\n          <section>\n            <FeaturedErrorNumber as=\"h1\">{errorCode}</FeaturedErrorNumber>\n            <HeadingWrapper>\n              <Heading as=\"p\">{errorMessage}</Heading>\n            </HeadingWrapper>\n          </section>\n        </main>\n      </ErrorPageWrapper>\n    </BasicLayout>\n  );\n};\n"],"sourceRoot":""}