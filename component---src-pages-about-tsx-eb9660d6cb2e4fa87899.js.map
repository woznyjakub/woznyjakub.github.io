{"version":3,"sources":["webpack:///./src/_pages/about/about.style.tsx","webpack:///./src/_pages/about/about.tsx","webpack:///./src/pages/about.tsx"],"names":["Grid","styled","div","media","phone","Column","TextWrapper","article","StyckyContainer","ImageWrapper","figure","desktopSmall","AboutPage","data","content","dataJson","title","pageTitle","isReturnButton","as","fontSize","gutter","centered","jobs","map","companyName","location","role","startDate","endDate","font","Font","SECONDARY","dateTime","value","label","fluid","file","childImageSharp","alt","query"],"mappings":"m5BAIO,IAAMA,EAAOC,IAAOC,IAAV,mEAAGD,CAAH,mBAEbE,IAAMC,MAFO,MAQJC,EAASJ,IAAOC,IAAV,qEAAGD,CAAH,4BAEfE,IAAMC,MAFS,MAQNE,EAAcL,IAAOM,QAAV,0EAAGN,CAAH,iDAMXO,EAAkBP,IAAOC,IAAV,8EAAGD,CAAH,6BAKfQ,EAAeR,IAAOS,OAAV,2EAAGT,CAAH,wSAsBrBE,IAAMC,MAtBe,KAyBrBD,IAAMQ,aAzBe,MCiEVC,EAnFG,SAAC,GAA6B,IAA3BC,EAA2B,EAA3BA,KACXC,EAAYD,EAAKE,SAAjBD,QAER,OACE,cAAC,IAAD,CAAaE,MAAOF,EAAQG,UAAWC,gBAAc,EAArD,SACE,+BACE,kCACE,eAAClB,EAAD,WACE,cAACK,EAAD,UACE,eAACC,EAAD,WACE,cAAC,IAAD,CAASa,GAAG,KAAKC,SAAS,QAAQC,OAAO,SAASC,UAAQ,EAA1D,SACGR,EAAQG,YAEX,cAAC,IAAD,CAAWE,GAAG,IAAIC,SAAS,SAA3B,uCAGA,cAAC,IAAD,CAAWD,GAAG,IAAd,yFACA,cAAC,IAAD,CAAWA,GAAG,IAAd,yNAIA,cAAC,IAAD,CAAWA,GAAG,IAAIE,OAAO,SAAzB,sGAIA,cAAC,IAAD,CAASF,GAAG,KAAKE,OAAO,SAASC,UAAQ,EAAzC,wBAGA,6BACGR,EAAQS,KAAKC,KAAI,YAAyD,IAAtDC,EAAsD,EAAtDA,YAAaC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,QAC3D,OACE,6BACE,eAAC,IAAD,CAAWV,GAAG,IAAIE,OAAO,SAAzB,UACE,cAAC,IAAD,CAAWF,GAAG,OAAOC,SAAS,SAASC,OAAQ,KAAMS,KAAMC,IAAKC,UAAhE,SACGP,IACU,IACb,eAAC,IAAD,CAAWN,GAAG,QAAQC,SAAS,UAAUC,OAAQ,KAAjD,cACIK,EADJ,OAGA,uBACA,cAAC,IAAD,CAAWP,GAAG,OAAOC,SAAS,UAAUC,OAAQ,KAAhD,SACGM,IAEH,uBACA,cAAC,IAAD,CAAWR,GAAG,OAAOc,SAAUL,EAAUM,MAAOlB,MAAOY,EAAUM,MAAjE,SACGN,EAAUO,QAEZ,MACD,cAAC,IAAD,CAAWhB,GAAG,OAAOc,SAAUJ,EAAQK,MAAOlB,MAAOa,EAAQK,MAA7D,SACGL,EAAQM,YAlBHV,EAAZ,IAA2BG,QAyBjC,cAAC,IAAD,CAAWT,GAAG,IAAIE,OAAO,SAAzB,yFAIA,cAAC,IAAD,CAASF,GAAG,KAAKE,OAAO,SAASC,UAAQ,EAAzC,4BAGA,cAAC,IAAD,CAAWH,GAAG,IAAd,qOAMJ,cAACd,EAAD,UACE,cAACG,EAAD,UACE,cAACC,EAAD,UACE,cAAC,IAAD,CAAK2B,MAAOvB,EAAKwB,KAAKC,gBAAgBF,MAAOG,IAAI,6CCjFtDC,EAAQ","file":"component---src-pages-about-tsx-eb9660d6cb2e4fa87899.js","sourcesContent":["import styled from 'styled-components';\n\nimport { media } from '../../utils';\n\nexport const Grid = styled.div`\n  width: 100%;\n  ${media.phone`\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n  `}\n`;\n\nexport const Column = styled.div`\n  padding-bottom: 2rem;\n  ${media.phone`\n    padding-left: 1rem;\n    padding-right: 1rem;\n  `}\n`;\n\nexport const TextWrapper = styled.article`\n  max-width: 350px;\n  margin: 0 auto;\n  hyphens: auto;\n`;\n\nexport const StyckyContainer = styled.div`\n  position: sticky;\n  top: 8%;\n`;\n\nexport const ImageWrapper = styled.figure`\n  position: relative;\n  max-width: 640px;\n  margin: 0 auto;\n  padding: 0 0 2rem 2rem;\n  ::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 2rem;\n    top: 2rem;\n    bottom: 0;\n    border: 1px solid currentColor;\n    z-index: -1;\n    will-change: transform;\n    transition: transform 0.3s;\n  }\n  :hover {\n    ::before {\n      transform: translate(1rem, -1rem);\n    }\n  }\n  ${media.phone`\n    margin-right: 0;\n  `}\n  ${media.desktopSmall`\n    margin-right: auto;\n    padding: 0 0 3rem 3rem;\n    ::before {\n      right: 3rem;\n      top: 3rem;\n    }\n    :hover {\n      ::before {\n        transform: translate(1.5rem, -1.5rem);\n      }\n    }\n  `}\n`;\n","import Img from 'gatsby-image';\n\nimport { BasicLayout } from '../../components/layouts';\nimport { BasicText, Heading } from '../../components/typography';\nimport { Font } from '../../utils';\n\nimport { Grid, Column, TextWrapper, StyckyContainer, ImageWrapper } from './about.style';\nimport { AboutPageData } from './about.interface';\n\ntype AboutPageProps = {\n  data: AboutPageData;\n};\n\nconst AboutPage = ({ data }: AboutPageProps) => {\n  const { content } = data.dataJson;\n\n  return (\n    <BasicLayout title={content.pageTitle} isReturnButton>\n      <main>\n        <section>\n          <Grid>\n            <Column>\n              <TextWrapper>\n                <Heading as=\"h1\" fontSize=\"large\" gutter=\"bottom\" centered>\n                  {content.pageTitle}\n                </Heading>\n                <BasicText as=\"p\" fontSize=\"larger\">\n                  Hi, nice to see you here!\n                </BasicText>\n                <BasicText as=\"p\">My name is Jakub Wo≈∫ny and I'm a programmer specialized in web development.</BasicText>\n                <BasicText as=\"p\">\n                  I can create fully functional web applications and websites, working on both the frontend and backend sides while adhering to the latest\n                  standards and best practices and paying close attention to detail.\n                </BasicText>\n                <BasicText as=\"p\" gutter=\"bottom\">\n                  My programming career started in May 2018, and I've been improving my skills ever since.\n                </BasicText>\n\n                <Heading as=\"h2\" gutter=\"bottom\" centered>\n                  Experience\n                </Heading>\n                <ul>\n                  {content.jobs.map(({ companyName, location, role, startDate, endDate }) => {\n                    return (\n                      <li key={`${companyName}_${startDate}`}>\n                        <BasicText as=\"p\" gutter=\"bottom\">\n                          <BasicText as=\"span\" fontSize=\"larger\" gutter={null} font={Font.SECONDARY}>\n                            {companyName}\n                          </BasicText>{' '}\n                          <BasicText as=\"small\" fontSize=\"smaller\" gutter={null}>\n                            ({location})\n                          </BasicText>\n                          <br />\n                          <BasicText as=\"span\" fontSize=\"smaller\" gutter={null}>\n                            {role}\n                          </BasicText>\n                          <br />\n                          <BasicText as=\"time\" dateTime={startDate.value} title={startDate.value}>\n                            {startDate.label}\n                          </BasicText>\n                          {' - '}\n                          <BasicText as=\"time\" dateTime={endDate.value} title={endDate.value}>\n                            {endDate.label}\n                          </BasicText>\n                        </BasicText>\n                      </li>\n                    );\n                  })}\n                </ul>\n                <BasicText as=\"p\" gutter=\"bottom\">\n                  I'm on sabbatical since 2023, but open to new opportunities and challenges.\n                </BasicText>\n\n                <Heading as=\"h2\" gutter=\"bottom\" centered>\n                  Beyond my work\n                </Heading>\n                <BasicText as=\"p\">\n                  I'm a motorcycle enthusiast, so I love spending my free time riding and exploring new places. And besides that, I also enjoy watching travel\n                  vlogs and reading about fascinating facts about the world we live in.\n                </BasicText>\n              </TextWrapper>\n            </Column>\n            <Column>\n              <StyckyContainer>\n                <ImageWrapper>\n                  <Img fluid={data.file.childImageSharp.fluid} alt=\"A programmer's workplace\" />\n                </ImageWrapper>\n              </StyckyContainer>\n            </Column>\n          </Grid>\n        </section>\n      </main>\n    </BasicLayout>\n  );\n};\n\nexport default AboutPage;\n","import { graphql } from 'gatsby';\n\nexport { default } from '../_pages/about';\n\nexport const query = graphql`\n  {\n    file(name: { in: \"office-1\" }) {\n      childImageSharp {\n        fluid {\n          ...GatsbyImageSharpFluid_tracedSVG\n          originalName\n        }\n      }\n    }\n    dataJson(dataType: { eq: \"pagedata\" }, pageName: { eq: \"about\" }) {\n      content {\n        pageTitle\n        jobs {\n          companyName\n          location\n          role\n          startDate {\n            label\n            value\n          }\n          endDate {\n            label\n            value\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}